//===== eAthena Script ======================================= 
//= Banker Script 
//===== By: ================================================== 
//= Syrus22 (1.0)
//===== Current Version: ===================================== 
//= 1.0
//===== Compatible With: ===================================== 
//= Any eAthena version with Account variables.
//===== Description: ========================================= 
//= An account wide Banker to store Zeny
//===== Additional Comments: ================================= 
//= Syrus22 - There's an optional transaction fee at the top of
//= the script. To use it simply change the first set command
//= to set the cost variable to whatever you want the fee to be.
//===== Translated into Russian: =============================
//= 12.11.2007 Коррекция перевода [Vorp]
//============================================================ 
prt_in,38,108,4	script	Banker	109,{
set @cost,500;
mes "[Banker]";
mes "Добро пожаловать в Первый Банк Пронтеры! Чем могу помочь?";
next;
menu "Положить деньги.",Ldeposit,"Снять деньги.",Lwithdrawl,"Узнать баланс",Lbalance,"Уйти",Lcancel;

Ldeposit:
	mes "[Banker]";
	mes "Пожалуйста, введите ту сумму, которую хотите положить на ваш счёт, но не больше 999,999.";
	next;
	if (@cost > 0) goto Ldepocost;
	goto Ldepocont;

	Ldepocost:
		mes "[Banker]";
		mes "Да, и не забудьте, что мы возьмём с вас " + @cost + "z за операцию.";
		next;
		goto Ldepocont;

Ldepocont:
	input @deposit;
	if (@deposit < 1) goto Lrealamount;
	if (@deposit > Zeny) goto Lneedzeny;
	if (@deposit > (Zeny - @cost)) goto Lneedzeny2;
	set Zeny,Zeny - @deposit;
	set Zeny,Zeny - @cost;
	set #bankstorage,#bankstorage + @deposit;
	mes "[Banker]";
	mes "Большое спасибо...Ваши деньги в надёжных руках.";
	close;

Lwithdrawl:
	mes "[Banker]";
	mes "Пожалуйста, введите ту сумму, которую хотите снять со счёта, но не больше 999,999";
	next;
	if (@cost > 0) goto Lwithcost;
	goto Lwithcont;

	Lwithcost:
		mes "[Banker]";
		mes "Да, и не забудьте, что мы возьмём с вас " + @cost + "z за операцию.";
		next;
		goto Lwithcont;

Lwithcont:
	input @withdrawl;
	if (@withdrawl < 1) goto Lrealamount;
	if (@withdrawl > #bankstorage) goto Lneedzeny3;
	if ((@cost > Zeny) && ((Zeny + @withdrawl) > @cost)) goto Lcostask; 
	if (@cost > Zeny) goto Lneedzeny2;
	goto Lwithcont2;

	Lcostask:
		mes "[Banker]";
		mes "У вас нет денег для оплаты наших услуг, хотите чтобы я взял их с вашего счёта?";
		next;
		menu "Да, пожалуйста.",Lwithtake,"Нет, спасибо.",Lcancel;

	Lwithtake:
		mes "[Banker]";
		mes "Хорошо.";
		set @withdrawl,@withdrawl - @cost;
		set #bankstorage,#bankstorage - @cost;
		set @cost,0;
		next;
		goto Lwithcont2;

Lwithcont2:
	set Zeny,Zeny - @cost;
	set Zeny,Zeny + @withdrawl;
	set #bankstorage,#bankstorage - @withdrawl;
	mes "[Banker]";
	mes "Вот ваши деньги. Удачного дня!.";
	close;

Lbalance:
	mes "[Banker]";
	mes "Хмм, сейчас посмотрим...";
	next;
	mes "*Rustle, Rustle*";
	next;
	mes "[Banker]";
	mes "Состояние вашего счёта: " + #bankstorage + " Zeny.";
	close;

Lrealamount:
	mes "[Banker]";
	mes "Не стоит со мной шутить, в следующий раз введите правильное число.";
	close;

Lneedzeny:
	mes "[Banker]";
	mes "Извините, вы пытаетесь положить больше, чем имеете.";
	close;

Lneedzeny2:
	mes "[Banker]";
	mes "Извините, у вас недостаточно денег для оплаты наших услуг.";
	close;

Lneedzeny3:
	mes "[Banker]";
	mes "Извините, на вашем аккаунте нет денег.";
	close;

Lcancel:
	mes "[Banker]";
	mes "Мы будем ждать вас и надеемся, что наш сервис пришёлся вам по душе";
	close;
}